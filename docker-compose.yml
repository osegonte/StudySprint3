# docker-compose.yml
# StudySprint 3.0 Development Environment

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: studysprint3_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DATABASE_USER:-studysprint}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-studysprint}
      POSTGRES_DB: ${DATABASE_NAME:-studysprint3}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-studysprint} -d ${DATABASE_NAME:-studysprint3}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - studysprint_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: studysprint3_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - studysprint_network

  # Backend API (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: studysprint3_backend
    restart: unless-stopped
    environment:
      - ENVIRONMENT=development
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=${DATABASE_USER:-studysprint}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-studysprint}
      - DATABASE_NAME=${DATABASE_NAME:-studysprint3}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this-in-production}
      - DEBUG=true
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - studysprint_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  studysprint_network:
    driver: bridge